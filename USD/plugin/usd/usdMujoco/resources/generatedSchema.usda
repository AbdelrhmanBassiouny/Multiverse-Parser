#usda 1.0
(
    "WARNING: THIS FILE IS GENERATED BY usdGenSchema.  DO NOT EDIT."
)

class Mujoco "Mujoco" (
    apiSchemas = ["MujocoOptionAPI"]
    doc = "Mujoco"
)
{
    string mujoco:model (
        displayName = "MuJoCo Model"
        doc = "The name of the model."
    )
}

class "MujocoOptionAPI" (
    doc = "This element is in one-to-one correspondence with the low level structure mjOption contained in the field mjModel.opt of mjModel."
)
{
    float mujoco:option:timestep = 0.002 (
        displayName = "Time Step"
        doc = "Simulation time step in seconds."
    )
}

class MujocoAsset "MujocoAsset" (
    doc = "This is a grouping element for assets."
)
{
}

class MujocoMesh "MujocoMesh" (
    doc = "This element creates a mesh asset, which can then be referenced from geoms."
)
{
    asset mujoco:mesh:file (
        displayName = "Mesh File"
        doc = "The mesh file."
    )
    float3 mujoco:mesh:scale = (1, 1, 1) (
        displayName = "Mesh Scale"
        doc = "This attribute specifies the scaling that will be applied to the vertex data along each coordinate axis. Negative values are allowed, resulting in flipping the mesh along the corresponding axis."
    )
}

class MujocoMaterial "MujocoMaterial" (
    doc = "This element creates a material asset, which can then be referenced from geoms."
)
{
    float mujoco:material:emission (
        displayName = "Material Emission"
        doc = "Emission in OpenGL has the RGBA format, however we only provide a scalar setting."
    )
    color4f mujoco:material:rgba (
        displayName = "Material RGBA"
        doc = "Color and transparency of the material. All components should be in the range [0 1]."
    )
    float mujoco:material:specular (
        displayName = "Material Specular"
        doc = "Specularity in OpenGL has the RGBA format, however we only provide a scalar setting."
    )
    rel mujoco:material:texture (
        displayName = "Material Texture"
        doc = "If this attribute is specified, the material has a texture associated with it."
    )
}

class MujocoTexture "MujocoTexture" (
    doc = "This element creates a texture asset, which can then be referenced from materials."
)
{
    asset mujoco:texture:file (
        displayName = "Texture File"
        doc = "The texture file."
    )
    uniform token mujoco:texture:type = "2d" (
        allowedTokens = ["2d", "cube", "skybox"]
        displayName = "Texture Type"
        doc = "This attribute determines how the texture is represented and mapped to objects. It also determines which of the remaining attributes are relevant."
    )
}

class MujocoEquality "MujocoEquality" (
    doc = "This is a grouping element for equality constraints."
)
{
}

class MujocoEqualityJoint "MujocoEqualityJoint" (
    doc = "This element constrains the position or angle of one joint to be a quartic polynomial of another joint."
)
{
    rel mujoco:equality:joint:joint1 (
        displayName = "Equality Joint1"
        doc = "First joint."
    )
    rel mujoco:equality:joint:joint2 (
        displayName = "Equality Joint2"
        doc = "Second joint."
    )
    float[] mujoco:equality:joint:polycoef (
        displayName = "Equality Joint Polycoef"
        doc = "Coefficients a0 â€¦ a4 of the quartic polynomial."
    )
}

class "MujocoBodyInertialAPI" (
    doc = "This element creates an inertial element for a body."
)
{
    float3 mujoco:body:inertial:diaginertia (
        displayName = "Diagonal Inertia"
        doc = "The diagonal elements of the inertia matrix."
    )
    float mujoco:body:inertial:mass (
        displayName = "Mass"
        doc = "The mass of the body."
    )
    point3f mujoco:body:inertial:pos (
        displayName = "Inertial Position"
        doc = "Position of the inertial frame."
    )
    quatf mujoco:body:inertial:quat = (1, 0, 0, 0) (
        displayName = "Inertial Quaternion"
        doc = "Quaternion of the inertial frame."
    )
}

class "MujocoBodyAPI" (
    doc = "This element creates a body."
)
{
    point3f mujoco:body:pos (
        displayName = "Body Position"
        doc = "The 3D position (x, y, z) of the body frame, in the parent coordinate frame."
    )
    quatf mujoco:body:quat = (1, 0, 0, 0) (
        displayName = "Body Quaternion"
        doc = "The quaternion (w, x, y, z) of the body frame, in the parent coordinate frame."
    )
}

class "MujocoCompositeAPI" (
    doc = "This element creates a composite."
)
{
    vector3f mujoco:composite:count (
        displayName = "Count"
        doc = "The element count in each dimension of the grid. This has 3 numbers, specifying the element count along the X, Y and Z axis of the parent body frame within."
    )
    vector3f mujoco:composite:offset3D (
        displayName = "Offset"
        doc = "The offset is expressed in the local coordinate frame of the parent body."
    )
    string mujoco:composite:prefix (
        displayName = "Prefix"
        doc = "The prefix is needed when multiple composite objects are used in the same model, to avoid name conflicts."
    )
    float mujoco:composite:spacing (
        displayName = "Spacing"
        doc = "The spacing between the centers of the grid elements. This spacing is the same in all dimensions. It should normally be set to a value larger than the geom size, otherwise there will be a lot of contacts in the reference model configuration (which is allowed but rarely desirable)."
    )
    uniform token mujoco:composite:type (
        allowedTokens = ["particle", "grid", "cable", "rope", "loop", "cloth", "box", "cylinder", "ellipsoid"]
        displayName = "Type"
        doc = "Type of the composite object."
    )
}

class "MujocoJointAPI" (
    doc = "This element creates a joint."
)
{
    vector3f mujoco:joint:axis = (0, 0, 1) (
        displayName = "Joint Axis"
        doc = "This attribute specifies the axis of rotation for hinge joints and the direction of translation for slide joints."
    )
    point3f mujoco:joint:pos (
        displayName = "Joint Position"
        doc = "The 3D position (x, y, z) of the joint, specified in the frame of the body where the joint is defined."
    )
    float2 mujoco:joint:range (
        displayName = "Joint Range"
        doc = "The range of motion of the joint. For hinge joints, this is the range of rotation in radians. For slide joints, this is the range of translation in meters."
    )
    uniform token mujoco:joint:type = "hinge" (
        allowedTokens = ["ball", "slide", "hinge"]
        displayName = "Joint Type"
        doc = "Type of the joint."
    )
}

class "MujocoGeomAPI" (
    doc = "This element creates a geom, and attaches it rigidly to the body within which the geom is defined."
)
{
    rel mujoco:geom:material (
        displayName = "Geom Material"
        doc = "The material asset."
    )
    rel mujoco:geom:mesh (
        displayName = "Geom Mesh"
        doc = "The mesh asset."
    )
    point3f mujoco:geom:pos (
        displayName = "Geom Position"
        doc = "The 3D position (x, y, z) of the geom, specified in the frame of the body where the geom is defined."
    )
    quatf mujoco:geom:quat = (1, 0, 0, 0) (
        displayName = "Geom Quaternion"
        doc = "The quaternion (w, x, y, z) of the geom frame, specified in the frame of the body where the geom is defined."
    )
    vector3f mujoco:geom:size (
        displayName = "Geom Size"
        doc = "Geom size parameters. The number of required parameters and their meaning depends on the geom type as documented under the type attribute."
    )
    uniform token mujoco:geom:type = "sphere" (
        allowedTokens = ["plane", "hfield", "sphere", "capsule", "ellipsoid", "cylinder", "box", "mesh", "sdf"]
        displayName = "Geom Type"
        doc = "Type of geometric shape."
    )
}

